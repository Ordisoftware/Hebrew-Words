<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GroupBoxAllBooks.Text" xml:space="preserve">
    <value>Tous les livres</value>
  </data>
  <data name="ActionClose.Text" xml:space="preserve">
    <value>Fermer</value>
  </data>
  <data name="GroupBoxBook.Text" xml:space="preserve">
    <value>Livre</value>
  </data>
  <data name="GroupBoxMiddle.Text" xml:space="preserve">
    <value>Milieu de la Torah</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LabelMiddleLetter.Size" type="System.Drawing.Size, System.Drawing">
    <value>40, 13</value>
  </data>
  <data name="LabelMiddleLetter.Text" xml:space="preserve">
    <value>Lettre :</value>
  </data>
  <data name="LabelMiddleWord.Size" type="System.Drawing.Size, System.Drawing">
    <value>31, 13</value>
  </data>
  <data name="LabelMiddleWord.Text" xml:space="preserve">
    <value>Mot :</value>
  </data>
  <data name="LabelMiddleReference.Size" type="System.Drawing.Size, System.Drawing">
    <value>43, 13</value>
  </data>
  <data name="LabelMiddleReference.Text" xml:space="preserve">
    <value>Verset :</value>
  </data>
  <data name="GroupBoxOccurencesTorah.Text" xml:space="preserve">
    <value>Occurences de la Torah *</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="$this.ImeMode" type="System.Windows.Forms.ImeMode, System.Windows.Forms">
    <value>Inherit</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Statistiques au sujet de la Torah et du Tanak</value>
  </data>
  <data name="GroupBoxOccurencesAll.Text" xml:space="preserve">
    <value>Occurences du Tanak *</value>
  </data>
  <data name="LabelInfoOccurences.Text" xml:space="preserve">
    <value>* Ceci n'est qu'une approximation basée sur les mots contenant la partie principale du terme spécifique</value>
  </data>
  <data name="LabelInfoFrequent.Text" xml:space="preserve">
    <value>** Occurences strictes sans particule ni variante de racine</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Mot le plus long</value>
  </data>
  <data name="tabPage1.Text" xml:space="preserve">
    <value>Plus fréquents de la Torah **</value>
  </data>
  <data name="tabPage2.Text" xml:space="preserve">
    <value>Plus fréquents du Tanak **</value>
  </data>
  <data name="TabPageWordsLength.Text" xml:space="preserve">
    <value>Longueur des mots</value>
  </data>
  <data name="LabelCountWordsLength6.Text" xml:space="preserve">
    <value>Nombre de mots ayant 6 lettres : </value>
  </data>
  <data name="LabelCountWordsLength9.Text" xml:space="preserve">
    <value>Nombre de mots ayant 9 lettres : </value>
  </data>
  <data name="LabelCountWordsLength3.Text" xml:space="preserve">
    <value>Nombre de mots ayant 3 lettres : </value>
  </data>
  <data name="LabelCountWordsLength10.Text" xml:space="preserve">
    <value>Nombre de mots ayant 10 lettres : </value>
  </data>
  <data name="LabelCountWordsLength7.Text" xml:space="preserve">
    <value>Nombre de mots ayant 7 lettres : </value>
  </data>
  <data name="LabelCountWordsLength5.Text" xml:space="preserve">
    <value>Nombre de mots ayant 5 lettres : </value>
  </data>
  <data name="LabelCountWordsLength4.Text" xml:space="preserve">
    <value>Nombre de mots ayant 4 lettres : </value>
  </data>
  <data name="LabelCountWordsLength1or2.Text" xml:space="preserve">
    <value>Nombre de mots ayant moins de 3 lettres : </value>
  </data>
  <data name="LabelCountWordsLength8.Text" xml:space="preserve">
    <value>Nombre de mots ayant 8 lettres : </value>
  </data>
  <data name="LabelCountWordsLengthMoreThan10.Text" xml:space="preserve">
    <value>Nombre de mots ayant plus de 10 lettres : </value>
  </data>
  <data name="LabelAverageWordLength.Text" xml:space="preserve">
    <value>Longueur moyenne des mots dans le Tanak : </value>
  </data>
  <data name="LabelLongestTorahReferenceValue.Text" xml:space="preserve">
    <value>Référence</value>
  </data>
  <data name="LabelMiddleReferenceValue.Text" xml:space="preserve">
    <value>Référence</value>
  </data>
  <data name="ActionOpenHebrewLetters2.Text" xml:space="preserve">
    <value>Analyser avec Hebrew Letters</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Mot :</value>
  </data>
  <data name="LabelLongestTorahWordReference.Text" xml:space="preserve">
    <value>Verset :</value>
  </data>
  <data name="ActionWordSearchDefault.Text" xml:space="preserve">
    <value>Recherche par défaut</value>
  </data>
  <data name="ActionSearchWord.Text" xml:space="preserve">
    <value>Chercher dans la base de données</value>
  </data>
  <data name="LabelLongestTanakReferenceValue.Text" xml:space="preserve">
    <value>Référence</value>
  </data>
  <data name="ActionWordSearchOnline.Text" xml:space="preserve">
    <value>Chercher en ligne</value>
  </data>
  <data name="LabelLongestTanakWord.Text" xml:space="preserve">
    <value>Mot :</value>
  </data>
  <data name="LabelLongestTorahWord.Text" xml:space="preserve">
    <value>Verset :</value>
  </data>
</root>